##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.13.0-B3] date: [Thu Jun 24 00:26:03 IST 2021] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------
######################################
# enable/disable flags
######################################
RTOS = 0
GUIX = 1
GUIXDEMO = 0
CONSOLE = 1
USBSTORAGE = 1
# By setting SHOW_MEM_AND_FPS to 1 you can see the memory and CPU usage and FPS in bottom of the display.
SHOW_MEM_AND_FPS = 0 

ifeq ($(CONSOLE), 1)
CONSOLE_UART = 1
CONSOLE_USB = 0
endif
ifeq ($(MAKECMDGOALS),bootloader)
COMMON_SETTINGS = 0
endif
ifneq ($(MAKECMDGOALS),bootloader)
COMMON_SETTINGS = 1
endif

######################################
# build info
######################################
BUILD_REVISION := $(shell git describe --match ForceNone --abbrev=10 --always --dirty="+")
BUILD_BRANCH:= $(shell git rev-parse --abbrev-ref HEAD)
BUILD_TAG:= $(shell git tag --points-at HEAD *$(MAKECMDGOALS)*)
BUILD_DATE:= $(shell git show -s --date=format:%d/%m/%Y --format=%cd)
BUILD_TIME:= $(shell git show -s --date=format:%H:%M:%S --format=%cd)
ifeq ($(SHELL), cmd.exe)
BUILD_MACHINE := $(shell echo %username%)@$(shell hostname)
else
BUILD_MACHINE := $(shell whoami)@$(shell hostname)
endif

######################################
# defines
######################################
# recursive wildcard
rwildcard = $(foreach d,$(wildcard $(1:=/*)),$(call rwildcard,$d,$2) $(filter $(subst *,%,$2),$d))

######################################
# target
######################################
TARGET = $(MAKECMDGOALS)

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og

WARNINGS = -Wall -Wextra \
           -Wshadow -Wundef -Wmaybe-uninitialized -Wmissing-prototypes -Wpointer-arith -Wuninitialized \
           -Wunreachable-code -Wreturn-type -Wmultichar -Wformat-security -Wdouble-promotion -Wclobbered -Wdeprecated  \
           -Wempty-body -Wshift-negative-value -Wstack-usage=2048  \
           -Wtype-limits -Wsizeof-pointer-memaccess -Wmissing-prototypes -Wno-discarded-qualifiers

WARNINGS += -fdata-sections -ffunction-sections


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build/$(MAKECMDGOALS)


######################################
# source
######################################
# C sources: CubeMX (Auto-generated) #
#       DO NOT TOUCH THIS            #
######################################
C_SOURCES =  \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_can.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_gpio.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_hcd.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dsi.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pcd.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pcd_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2s.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_exti.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sdram.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_ltdc.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_ltdc_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_qspi.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rtc_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sd.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_tim.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_tim_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_ll_fmc.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_ll_sdmmc.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_ll_usb.c \
Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_q31.c \
Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_abs_q31.c \
Drivers/CMSIS/DSP/Source/StatisticsFunctions/arm_mean_q31.c 
ifeq ($(CONSOLE_USB), 1)
C_SOURCES +=  \
Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c \
Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_core.c \
Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ctlreq.c \
Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ioreq.c \
USB_DEVICE/App/usb_device.c \
USB_DEVICE/App/usbd_cdc_if.c \
USB_DEVICE/App/usbd_desc.c \
USB_DEVICE/Target/usbd_conf.c 
endif

ifeq ($(USBSTORAGE), 1)
C_SOURCES +=  \
Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Src/usbh_msc_bot.c \
Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Src/usbh_msc_scsi.c \
Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Src/usbh_msc.c \
Middlewares/ST/STM32_USB_Host_Library/Core/Src/usbh_core.c \
Middlewares/ST/STM32_USB_Host_Library/Core/Src/usbh_ctlreq.c \
Middlewares/ST/STM32_USB_Host_Library/Core/Src/usbh_ioreq.c \
Middlewares/ST/STM32_USB_Host_Library/Core/Src/usbh_pipes.c \
USB_HOST/App/usb_host.c \
USB_HOST/Target/usbh_conf.c \
Middlewares/Third_Party/FatFs/src/diskio.c \
Middlewares/Third_Party/FatFs/src/ff_gen_drv.c \
Middlewares/Third_Party/FatFs/src/ff.c \
Middlewares/Third_Party/FatFs/src/option/syscall.c \
Middlewares/Third_Party/FatFs/src/option/ccsbcs.c \
FATFS/App/fatfs.c \
FATFS/Target/usbh_diskio.c 
endif

ifeq ($(RTOS), 1)
# C sources: FreeRTOS			
C_SOURCES +=  \
LCSApp/common/Core/Src/freertos.c \
Middlewares/Third_Party/FreeRTOS/Source/croutine.c \
Middlewares/Third_Party/FreeRTOS/Source/event_groups.c \
Middlewares/Third_Party/FreeRTOS/Source/list.c \
Middlewares/Third_Party/FreeRTOS/Source/queue.c \
Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c \
Middlewares/Third_Party/FreeRTOS/Source/tasks.c \
Middlewares/Third_Party/FreeRTOS/Source/timers.c \
Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/port.c \
Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c
endif

ifeq ($(COMMON_SETTINGS), 1)

# C sources: Common Settings
ifeq ($(CONSOLE), 1)
C_SOURCES += \
LCSApp/common/cli/cli.c
endif

ifeq ($(GUIX), 1)
C_SOURCES +=  \
LCSApp/common/touch/touch.c \
LCSApp/common/display/display.c 
endif

C_SOURCES +=  \
LCSApp/common/common_settings/common_settings.c \
LCSApp/common/can/can.c \
LCSApp/common/rtc/rtc.c \
LCSApp/common/sdcard/sdcard.c \
LCSApp/common/fram/fram.c \
LCSApp/common/usb/usb.c \
LCSApp/common/utils/utils.c \
LCSApp/common/Core/Src/stm32f7xx_hal_msp.c \
LCSApp/common/Core/Src/stm32f7xx_hal_timebase_tim.c \
LCSApp/common/Core/Src/stm32f7xx_it.c \
LCSApp/common/Core/Src/system_stm32f7xx.c \
LCSApp/common/report_system/report.c
endif

# C sources: LCSApp
ifeq ($(MAKECMDGOALS),loader)
WHEEL_LOADER = 1
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/loader,*.c))
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/common,*.c))
C_SOURCES +=  \
LCSApp/loader/metal/metal.c \
LCSApp/loader/analog/analog.c \
LCSApp/loader/core/Src/main.c 
endif

ifeq ($(MAKECMDGOALS),excavator)
EXCAVATOR = 1
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/excavator,*.c))
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/common,*.c))
C_SOURCES +=  \
LCSApp/excavator/metal/metal.c \
LCSApp/excavator/analog/analog.c \
LCSApp/excavator/core/Src/main.c
endif


ifeq ($(MAKECMDGOALS),tipper)
TIPPER = 1
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/tipper,*.c))
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/common,*.c))
C_SOURCES +=  \
LCSApp/tipper/metal/metal.c \
LCSApp/tipper/analog/analog.c \
LCSApp/tipper/core/Src/main.c
endif

ifeq ($(MAKECMDGOALS),dumper)
DUMPER = 1
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/dumper,*.c))
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/common_theme2,*.c))
C_SOURCES +=  \
LCSApp/dumper/metal/metal.c \
LCSApp/dumper/analog/analog.c \
LCSApp/dumper/core/Src/main.c
endif

ifeq ($(MAKECMDGOALS),gtruck)
GTRUCK = 1
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/gtruck,*.c))
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/common,*.c))
C_SOURCES +=  \
LCSApp/gtruck/metal/metal.c \
LCSApp/gtruck/analog/analog.c \
LCSApp/gtruck/core/Src/main.c \
LCSApp/gtruck/wt_sensor/wt_sensor.c
endif

# C sources: LCSApp
ifeq ($(MAKECMDGOALS),bootloader)
C_SOURCES +=  \
LCSBoot/display/display.c \
LCSBoot/touch/touch.c \
LCSBoot/usb/usb_flash_functions.c \
LCSBoot/usb/usb_boot.c \
LCSBoot/core/Src/main.c \
LCSBoot/core/Src/stm32f7xx_hal_msp.c \
LCSBoot/core/Src/stm32f7xx_it.c \
LCSBoot/core/Src/system_stm32f7xx.c 
endif

ifeq ($(MAKECMDGOALS),template)
TEMPLATE = 1
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/template_project,*.c))
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/common_theme2,*.c))
C_SOURCES +=  \
LCSApp/template_project/metal/metal.c \
LCSApp/template_project/analog/analog.c \
LCSApp/template_project/core/Src/main.c \
LCSApp/common/adc/adc.c
endif

ifeq ($(MAKECMDGOALS),counting_system)
COUNTING_SYSTEM = 1
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/counting_system,*.c))
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/display/common_theme2,*.c))
C_SOURCES +=  \
LCSApp/counting_system/metal/metal.c \
LCSApp/counting_system/analog/analog.c \
LCSApp/counting_system/core/Src/main.c
endif

# C sources: LCSBsp
C_SOURCES +=  \
LCSBsp/STM32746G-Discovery/stm32746g_discovery_qspi.c \
LCSBsp/Components/ft5426/ft5426.c \
LCSBsp/STM32746G-Discovery/stm32746g_prod_sdram.c \
LCSBsp/STM32746G-Discovery/stm32746g_prod_ts.c \
LCSBsp/STM32746G-Discovery/stm32746g_discovery_sd.c \
LCSBsp/STM32746G-Discovery/stm32746g_prod.c \
LCSBsp/STM32746G-Discovery/stm32746g_discovery.c

# C sources: LCSGraphics
ifeq ($(GUIX), 1)
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/lvgl/src,*.c))
endif
ifeq ($(GUIXDEMO), 1)
C_SOURCES += $(strip $(call rwildcard,LCSGraphics/lvgl/lv_demos,*.c))
endif

# C sources: LCSUtils
ifeq ($(CONSOLE), 1)
C_SOURCES += LCSUtils/console/console.c
endif
C_SOURCES +=  \
LCSUtils/fsm/fsm.c \
LCSUtils/logging/logging.c \
LCSUtils/swo/swo.c

# ASM sources
ifneq ($(MAKECMDGOALS),bootloader)
ASM_SOURCES =  \
app_startup_stm32f746xx.s
else 
ASM_SOURCES =  \
boot_startup_stm32f746xx.s
endif


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F746xx

# C defines: Generate build information
C_DEFS += -DVERSION_BUILD_REVISION=\"$(BUILD_REVISION)\"
C_DEFS += -DVERSION_BUILD_DATE=\"$(BUILD_DATE)\"
C_DEFS += -DVERSION_BUILD_TIME=\"$(BUILD_TIME)\"
C_DEFS += -DVERSION_BUILD_MACHINE=\"$(BUILD_MACHINE)\"
C_DEFS += -DVERSION_BUILD_BRANCH=\"$(BUILD_BRANCH)\"
C_DEFS += -DVERSION_BUILD_TAG=\"$(BUILD_TAG)\"

ifeq ($(RTOS), 1)
# C defines: FreeRTOS
C_DEFS +=  \
-DRTOS
endif

ifeq ($(GUIX), 1)
# C defines: Graphics
C_DEFS +=  \
-DGUIX
endif
ifeq ($(GUIXDEMO), 1)
# C defines: Graphics Demo
C_DEFS +=  \
-DGUIXDEMO
endif
ifeq ($(USBSTORAGE), 1)
C_DEFS +=  \
-DUSBSTORAGE
endif
ifeq ($(SHOW_MEM_AND_FPS), 1)
C_DEFS +=  \
-DSHOW_MEM_AND_FPS
endif
ifeq ($(CONSOLE), 1)
# C defines: FreeRTOS
C_DEFS +=  \
-DCONSOLE
ifeq ($(CONSOLE_USB), 1)
C_DEFS +=  \
-DCONSOLE_USB
else
C_DEFS +=  \
-DCONSOLE_UART
endif
endif

ifeq ($(EXCAVATOR), 1)
# C defines: EXCAVATOR
C_DEFS +=  \
-DEXCAVATOR
endif

ifeq ($(WHEEL_LOADER), 1)
# C defines: WHEEL_LOADER
C_DEFS +=  \
-DWHEEL_LOADER
endif

ifeq ($(TIPPER), 1)
# C defines: TIPPER
C_DEFS +=  \
-DTIPPER
endif

ifeq ($(DUMPER), 1)
# C defines: DUMPER
C_DEFS +=  \
-DDUMPER
endif

ifeq ($(GTRUCK), 1)
# C defines: GTRUCK
C_DEFS +=  \
-DGTRUCK
endif

ifeq ($(TEMPLATE), 1)
# C defines: GTRUCK
C_DEFS +=  \
-DTEMPLATE
endif

ifeq ($(COUNTING_SYSTEM), 1)
# C defines: GTRUCK
C_DEFS +=  \
-DCOUNTING_SYSTEM
endif


# AS includes
AS_INCLUDES = 

# C includes: CubeMX
C_INCLUDES =  \
-IDrivers/STM32F7xx_HAL_Driver/Inc \
-IDrivers/STM32F7xx_HAL_Driver/Inc/Legacy \
-IMiddlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc \
-IMiddlewares/ST/STM32_USB_Device_Library/Core/Inc \
-IDrivers/CMSIS/Device/ST/STM32F7xx/Include \
-IDrivers/CMSIS/DSP/Include \
-IDrivers/CMSIS/Include \
-IUSB_DEVICE/App \
-IUSB_DEVICE/Target 

ifeq ($(USBSTORAGE), 1)
# C includes: FreeRTOS
C_INCLUDES +=  \
-IMiddlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc \
-IMiddlewares/ST/STM32_USB_Host_Library/Core/Inc \
-IUSB_HOST/App \
-IUSB_HOST/Target \
-IFATFS/App \
-IFATFS/Target \
-IMiddlewares/Third_Party/FatFs/src 
endif

ifeq ($(RTOS), 1)
# C includes: FreeRTOS
C_INCLUDES +=  \
-IMiddlewares/Third_Party/FreeRTOS/Source/include \
-IMiddlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1
endif

ifneq ($(MAKECMDGOALS),bootloader)
# C sources: LCSGraphics
ifeq ($(GUIX), 1)
C_INCLUDES +=  \
-ILCSGraphics \
-ILCSGraphics/lvgl/src \
-ILCSGraphics/lvgl/src/core \
-ILCSGraphics/lvgl/src/draw \
-ILCSGraphics/lvgl/src/extra \
-ILCSGraphics/lvgl/src/extra/layouts \
-ILCSGraphics/lvgl/src/extra/layouts/flex \
-ILCSGraphics/lvgl/src/extra/layouts/grid \
-ILCSGraphics/lvgl/src/extra/themes \
-ILCSGraphics/lvgl/src/extra/themes/basic \
-ILCSGraphics/lvgl/src/extra/themes/default \
-ILCSGraphics/lvgl/src/extra/themes/mono \
-ILCSGraphics/lvgl/src/extra/widgets \
-ILCSGraphics/lvgl/src/extra/widgets/animimg \
-ILCSGraphics/lvgl/src/extra/widgets/calendar \
-ILCSGraphics/lvgl/src/extra/widgets/chart \
-ILCSGraphics/lvgl/src/extra/widgets/colorwheel \
-ILCSGraphics/lvgl/src/extra/widgets/imgbtn \
-ILCSGraphics/lvgl/src/extra/widgets/keyboard \
-ILCSGraphics/lvgl/src/extra/widgets/list \
-ILCSGraphics/lvgl/src/extra/widgets/meter \
-ILCSGraphics/lvgl/src/extra/widgets/msgbox \
-ILCSGraphics/lvgl/src/extra/widgets/span \
-ILCSGraphics/lvgl/src/extra/widgets/spinbox \
-ILCSGraphics/lvgl/src/extra/widgets/spinner \
-ILCSGraphics/lvgl/src/extra/widgets/tabview \
-ILCSGraphics/lvgl/src/extra/widgets/tileview \
-ILCSGraphics/lvgl/src/extra/widgets/win \
-ILCSGraphics/lvgl/src/font \
-ILCSGraphics/lvgl/src/gpu \
-ILCSGraphics/lvgl/src/hal \
-ILCSGraphics/lvgl/src/misc \
-ILCSGraphics/lvgl/src/widgets 
endif
else 
# C sources: LCSGraphics
ifeq ($(GUIX), 1)
C_INCLUDES +=  \
-ILCSGraphics/lvgl/src \
-ILCSGraphics/lvgl/src/core \
-ILCSGraphics/lvgl/src/draw \
-ILCSGraphics/lvgl/src/extra \
-ILCSGraphics/lvgl/src/extra/layouts \
-ILCSGraphics/lvgl/src/extra/layouts/flex \
-ILCSGraphics/lvgl/src/extra/layouts/grid \
-ILCSGraphics/lvgl/src/extra/themes \
-ILCSGraphics/lvgl/src/extra/themes/basic \
-ILCSGraphics/lvgl/src/extra/themes/default \
-ILCSGraphics/lvgl/src/extra/themes/mono \
-ILCSGraphics/lvgl/src/extra/widgets \
-ILCSGraphics/lvgl/src/extra/widgets/imgbtn \
-ILCSGraphics/lvgl/src/font \
-ILCSGraphics/lvgl/src/gpu \
-ILCSGraphics/lvgl/src/hal \
-ILCSGraphics/lvgl/src/misc \
-ILCSGraphics/lvgl/src/widgets 
endif
endif

ifeq ($(COMMON_SETTINGS), 1)
# C sources: Common Settings

ifeq ($(CONSOLE), 1)
C_INCLUDES +=  \
-ILCSApp/common/cli
endif

ifeq ($(GUIX), 1)
C_INCLUDES +=  \
-ILCSApp/common/touch
endif

C_INCLUDES +=  \
-ILCSApp/common/common_settings \
-ILCSApp/common/sdcard \
-ILCSApp/common/can \
-ILCSApp/common/rtc \
-ILCSApp/common/display \
-ILCSApp/common/fram \
-ILCSApp/common/usb \
-ILCSApp/common/utils \
-ILCSApp/common/Core/Inc \
-ILCSApp/common/report_system \
-ILCSApp/common/adc
endif


ifeq ($(MAKECMDGOALS),loader)
# C includes: LCSApp
C_INCLUDES +=  \
-ILCSApp/loader/core/Inc \
-ILCSApp/loader/metal \
-ILCSApp/loader/analog \
-ILCSGraphics/display/loader/app_windows \
-ILCSGraphics/display/common/common_windows 
endif

ifeq ($(MAKECMDGOALS),excavator)
# C includes: LCSApp
C_INCLUDES +=  \
-ILCSApp/excavator/core/Inc \
-ILCSApp/excavator/metal \
-ILCSApp/excavator/analog \
-ILCSGraphics/display/excavator/app_windows \
-ILCSGraphics/display/common/common_windows 
endif

ifeq ($(MAKECMDGOALS),tipper)
# C includes: LCSApp
C_INCLUDES +=  \
-ILCSApp/tipper/core/Inc \
-ILCSApp/tipper/metal \
-ILCSApp/tipper/analog \
-ILCSGraphics/display/tipper/app_windows \
-ILCSGraphics/display/common/common_windows 
endif

ifeq ($(MAKECMDGOALS),dumper)
# C includes: LCSApp
C_INCLUDES +=  \
-ILCSApp/dumper/core/Inc \
-ILCSApp/dumper/metal \
-ILCSApp/dumper/analog \
-ILCSGraphics/display/dumper/app_windows \
-ILCSGraphics/display/common_theme2/common_windows 
endif

ifeq ($(MAKECMDGOALS),gtruck)
# C includes: LCSApp
C_INCLUDES +=  \
-ILCSApp/gtruck/core/Inc \
-ILCSApp/gtruck/metal \
-ILCSApp/gtruck/analog \
-ILCSGraphics/display/gtruck/app_windows \
-ILCSGraphics/display/common/common_windows \
-ILCSApp/gtruck/wt_sensor
endif

ifeq ($(MAKECMDGOALS),bootloader)
# C includes: LCSApp
C_INCLUDES +=  \
-ILCSBoot/core/Inc \
-ILCSBoot/display \
-ILCSBoot/touch \
-ILCSBoot/usb \
-ILCSBoot/utils 
endif


ifeq ($(MAKECMDGOALS),template)
# C includes: LCSApp
C_INCLUDES +=  \
-ILCSApp/template_project/core/Inc \
-ILCSApp/template_project/metal \
-ILCSApp/template_project/analog \
-ILCSGraphics/display/template_project/app_windows \
-ILCSGraphics/display/common_theme2/common_windows 

endif

ifeq ($(MAKECMDGOALS),counting_system)
# C includes: LCSApp
C_INCLUDES +=  \
-ILCSApp/counting_system/core/Inc \
-ILCSApp/counting_system/metal \
-ILCSApp/counting_system/analog \
-ILCSGraphics/display/counting_system/app_windows \
-ILCSGraphics/display/common_theme2/common_windows 
endif
# C sources: LCSBsp
C_INCLUDES +=  \
-ILCSBsp/Components/n25q128a \
-ILCSBsp/Components/ft5426 \
-ILCSBsp/Components/microe3902 \
-ILCSBsp/STM32746G-Discovery

# C includes: LCSUtils
C_INCLUDES +=  \
-ILCSUtils/console \
-ILCSUtils/fsm \
-ILCSUtils/logging \
-ILCSUtils/swo

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) $(WARNINGS)

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) $(WARNINGS)

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
ifneq ($(MAKECMDGOALS),bootloader)
LDSCRIPT = APP_STM32F746BGTx_FLASH.ld
else 
LDSCRIPT = BOOT_STM32F746BGTx_FLASH.ld
endif

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -u _printf_float -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections -Wl,--print-memory-usage

# default action: build all
loader: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
	@echo "BUILD: SUCCESS"

excavator: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
	@echo "BUILD: SUCCESS"

tipper: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
	@echo "BUILD: SUCCESS"

dumper: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
	@echo "BUILD: SUCCESS"

gtruck: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
	@echo "BUILD: SUCCESS"

bootloader: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
	@echo "BUILD: SUCCESS"

template: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
	@echo "TEMPLATE BUILD: SUCCESS"

counting_system: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin
	@echo "COUNTING_SYSTEM BUILD: SUCCESS"

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	@$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@
	@echo "COMPILING: $<"

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	@$(AS) -c $(CFLAGS) $< -o $@
	@echo "COMPILING: $<"

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	@$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	@echo "LINKING: $<"
	@$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	@$(HEX) $< $@
	@echo "CONVERTING: [$<] TO [$@]"
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	@$(BIN) $< $@	
	@echo "CONVERTING: [$<] TO [$@]"
	
$(BUILD_DIR):
	mkdir -p $@		

#######################################
# clean up
#######################################
clean:
	@-rm -r build

#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***